{"version":3,"file":"chunks/1073.4e0567f80c23bbe50e37.min.js","mappings":"qOAMA,MAAMA,EAAY,EAAAC,KAAKC,OAAO,CAC1BC,KAAM,YACN,UAAAC,GACI,MAAO,CACHC,WAAW,EACXC,eAAgB,CAAC,EAEzB,EACAC,QAAQ,EACRC,MAAO,SACPC,YAAY,EACZC,sBAAsB,EACtB,SAAAC,GACI,MAAO,CACH,CAAEC,IAAK,MAEf,EACA,UAAAC,EAAW,eAAEP,IACT,MAAO,CAAC,MAAM,IAAAQ,iBAAgBC,KAAKC,QAAQV,eAAgBA,GAC/D,EACA,UAAAW,GACI,MAAO,IACX,EACA,WAAAC,GACI,MAAO,CACHC,aAAc,IAAM,EAAGC,WAAUC,QAAOC,QAAOC,YACpCH,EAASI,MAAM,CAClB,IAAMJ,EAASK,WACf,IAAML,EAASM,SAAQ,KACnB,MAAM,UAAEC,EAAS,YAAEC,GAAgBN,EACnC,GAAIK,EAAUE,MAAMC,OAAOC,KAAKC,KAAKC,UACjC,OAAO,EAEX,MAAM,UAAE5B,GAAcU,KAAKC,SACrB,gBAAEkB,GAAoBX,EAAOY,iBAC7BC,EAAQR,GACND,EAAUU,IAAIC,cAAgBX,EAAUE,MAAMO,QACtD,OAAOf,IACFkB,cAAc,CAAER,KAAMhB,KAAKZ,OAC3BuB,SAAQ,EAAGc,KAAIC,eAChB,GAAIA,GAAYL,GAAS/B,EAAW,CAChC,MAAMqC,EAAgBN,EACjBO,QAAOC,GAAQV,EAAgBW,SAASD,EAAKb,KAAK5B,QACvDqC,EAAGM,YAAYJ,EACnB,CACA,OAAO,CAAI,IAEVK,KAAK,MAK9B,EACA,oBAAAC,GACI,MAAO,CACH,YAAa,IAAMjC,KAAKQ,OAAOH,SAASD,eACxC,cAAe,IAAMJ,KAAKQ,OAAOH,SAASD,eAElD,G","sources":["webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-hard-break/dist/index.js"],"sourcesContent":["import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to insert hard breaks.\n * @see https://www.tiptap.dev/api/nodes/hard-break\n */\nconst HardBreak = Node.create({\n    name: 'hardBreak',\n    addOptions() {\n        return {\n            keepMarks: true,\n            HTMLAttributes: {},\n        };\n    },\n    inline: true,\n    group: 'inline',\n    selectable: false,\n    linebreakReplacement: true,\n    parseHTML() {\n        return [\n            { tag: 'br' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n    },\n    renderText() {\n        return '\\n';\n    },\n    addCommands() {\n        return {\n            setHardBreak: () => ({ commands, chain, state, editor, }) => {\n                return commands.first([\n                    () => commands.exitCode(),\n                    () => commands.command(() => {\n                        const { selection, storedMarks } = state;\n                        if (selection.$from.parent.type.spec.isolating) {\n                            return false;\n                        }\n                        const { keepMarks } = this.options;\n                        const { splittableMarks } = editor.extensionManager;\n                        const marks = storedMarks\n                            || (selection.$to.parentOffset && selection.$from.marks());\n                        return chain()\n                            .insertContent({ type: this.name })\n                            .command(({ tr, dispatch }) => {\n                            if (dispatch && marks && keepMarks) {\n                                const filteredMarks = marks\n                                    .filter(mark => splittableMarks.includes(mark.type.name));\n                                tr.ensureMarks(filteredMarks);\n                            }\n                            return true;\n                        })\n                            .run();\n                    }),\n                ]);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Enter': () => this.editor.commands.setHardBreak(),\n            'Shift-Enter': () => this.editor.commands.setHardBreak(),\n        };\n    },\n});\n\nexport { HardBreak, HardBreak as default };\n//# sourceMappingURL=index.js.map\n"],"names":["HardBreak","Node","create","name","addOptions","keepMarks","HTMLAttributes","inline","group","selectable","linebreakReplacement","parseHTML","tag","renderHTML","mergeAttributes","this","options","renderText","addCommands","setHardBreak","commands","chain","state","editor","first","exitCode","command","selection","storedMarks","$from","parent","type","spec","isolating","splittableMarks","extensionManager","marks","$to","parentOffset","insertContent","tr","dispatch","filteredMarks","filter","mark","includes","ensureMarks","run","addKeyboardShortcuts"],"sourceRoot":""}